{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","http_url","encodeURI","fetch","resp","json","data","gifs","map","id","title","url","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","img","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAES,GAAF,OAAaP,GAAb,mBAA2BO,OACzCN,EAAc,MAMlB,SACE,uBACMO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,gDAEwCC,UAAUH,GAFlD,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAACF,GAAU,IAAD,EAC5B,MAAO,CACHG,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,IAAG,UAAEL,EAAKM,cAAP,aAAE,EAAaC,iBAAiBF,QAVxB,kBAcZJ,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAMP,IACrB,4BAAKA,QCHJQ,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBACtB,CACIqB,KAAM,GACNa,SAAS,IAHjB,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAACC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDhBwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OAFAO,QAAQC,IAAIR,GAGR,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACX,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACoB,GAAD,OACP,cAAC,EAAD,eAEQA,GADEA,EAAInB,aEbzBoB,EAAe,WAExB,MAAmC5C,mBAAS,CAAC,oBAA7C,mBAAO6C,EAAP,KAAkB9C,EAAlB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAAET,GAAF,OACX,cAAE,EAAF,CAEIA,SAAaA,GADLA,YCZpCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b969f15b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2 )\r\n        {\r\n            setCategories(( cats ) => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n          <input\r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n          /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    //const api_key = 'IWCPDpkUZeFC78kiK74E95hJeIpFZNQn';\r\n    const http_url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=5&api_key=IWCPDpkUZeFC78kiK74E95hJeIpFZNQn`;\r\n    const resp = await fetch( http_url );\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map((data) => {\r\n        return {\r\n            id: data.id,\r\n            title: data.title,\r\n            url: data.images?.downsized_medium.url\r\n        }\r\n    }\r\n    );\r\n    return gifs;\r\n    //setImages(gifs);\r\n    //console.log(gifs);\r\n    //fetch(http_url).then((resp) => resp.json()).then((data => console.log('Datos: ',data)))\r\n}","import React from 'react'\r\n\r\nexport const GifGriditem = ( {id, title, url} ) => {\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGriditem} from './GifGriditem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    console.log(loading);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n            { loading && <p className='animate__animated animate__flash'>Cargando...</p> }\r\n            { <div className='card-grid'>          \r\n                {\r\n                    images.map((img) => \r\n                        <GifGriditem \r\n                            key={ img.id }\r\n                            {...img} />                   \r\n                    )\r\n                }                            \r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    );\r\n    \r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then((imgs) => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });              \r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['steven universe']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(( category ) => \r\n                        < GifGrid\r\n                            key =  {category}\r\n                            category = { category } \r\n                        />\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n} \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GitExpertApp} from './GitExpertApp'\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}